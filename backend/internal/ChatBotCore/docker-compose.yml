# ChatBotCore Microservice Docker Compose
version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:16-alpine
    container_name: chatbot-postgres
    restart: unless-stopped
    environment:
      POSTGRES_DB: chatbot_mvp
      POSTGRES_USER: chatbot_user
      POSTGRES_PASSWORD: chatbot_pass123
      POSTGRES_INITDB_ARGS: "--encoding=UTF-8"
    ports:
      - "55433:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./migrations:/docker-entrypoint-initdb.d
    networks:
      - chatbot-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U chatbot_user -d chatbot_mvp"]
      interval: 10s
      timeout: 5s
      retries: 5

  # ChatBotCore Service
  chatbot-core:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: chatbot-core
    restart: unless-stopped
    ports:
      - "8086:8086"
    environment:
      # Database Configuration
      DB_HOST: postgres
      DB_PORT: 5432
      DB_NAME: chatbot_mvp
      DB_USER: chatbot_user
      DB_PASSWORD: chatbot_pass123
      DB_SSL_MODE: disable
      DB_MAX_OPEN_CONNS: 25
      DB_MAX_IDLE_CONNS: 5
      DB_CONN_MAX_LIFETIME: 300s
      
      # Server Configuration
      PORT: 8086
      GIN_MODE: release
      
      # External Services (for future FacebookConnect integration)
      FACEBOOK_CONNECT_URL: http://facebook-connect:8085
      
      # Performance Configuration
      WORKER_POOL_SIZE: 10
      MESSAGE_QUEUE_SIZE: 1000
      
      # Logging
      LOG_LEVEL: info
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - chatbot-network
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:8086/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Migration Service (runs once to set up database)
  chatbot-migrate:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: chatbot-migrate
    command: ["./main", "migrate"]
    environment:
      DB_HOST: postgres
      DB_PORT: 5432
      DB_NAME: chatbot_mvp
      DB_USER: chatbot_user
      DB_PASSWORD: chatbot_pass123
      DB_SSL_MODE: disable
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - chatbot-network
    restart: "no"

volumes:
  postgres_data:
    driver: local

networks:
  chatbot-network:
    driver: bridge
