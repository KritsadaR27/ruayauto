services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    ports:
      - "5532:5432"
    environment:
      - POSTGRES_DB=${DB_NAME:-ruay_chatbot}
      - POSTGRES_USER=${DB_USER:-ruay_user}
      - POSTGRES_PASSWORD=${DB_PASSWORD:-ruay_password}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U ${DB_USER:-ruay_user} -d ${DB_NAME:-ruay_chatbot}" ]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped
    networks:
      - ruay-network

  # Chatbot Service (Port 8090)
  chatbot:
    build:
      context: .
      dockerfile: deployments/docker/chatbot.Dockerfile
    ports:
      - "8090:8090"
    environment:
      - GIN_MODE=${GIN_MODE:-release}
      - LOG_LEVEL=${LOG_LEVEL:-info}
      - DB_HOST=${DB_HOST:-postgres}
      - DB_PORT=${DB_PORT:-5432}
      - DB_USER=${DB_USER:-ruay_user}
      - DB_PASSWORD=${DB_PASSWORD:-ruay_password}
      - DB_NAME=${DB_NAME:-ruay_chatbot}
      - FACEBOOK_APP_ID=${FACEBOOK_APP_ID}
      - FACEBOOK_APP_SECRET=${FACEBOOK_APP_SECRET}
    depends_on:
      postgres:
        condition: service_healthy
    healthcheck:
      test: [ "CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:8090/health" ]
      interval: 30s
      timeout: 10s
      retries: 3
    restart: unless-stopped
    networks:
      - ruay-network

  # Webhook Service (Port 8091)  
  webhook:
    build:
      context: .
      dockerfile: deployments/docker/webhook.Dockerfile
    ports:
      - "8091:8091"
    environment:
      - GIN_MODE=${GIN_MODE:-release}
      - LOG_LEVEL=${LOG_LEVEL:-info}
      - WEBHOOK_PORT=8091
      - WEBHOOK_HOST=0.0.0.0
      - CHATBOT_URL=http://chatbot:8090
      - FACEBOOK_ENABLED=true
      - FACEBOOK_VERIFY_TOKEN=${FACEBOOK_VERIFY_TOKEN}
      - FACEBOOK_PAGE_TOKEN=${FACEBOOK_PAGE_ACCESS_TOKEN}
      - FACEBOOK_APP_SECRET=${FACEBOOK_APP_SECRET}
      - LINE_ENABLED=false
      - LINE_CHANNEL_SECRET=${LINE_CHANNEL_SECRET:-placeholder}
      - LINE_CHANNEL_TOKEN=${LINE_CHANNEL_TOKEN:-placeholder}
    depends_on:
      - chatbot
    healthcheck:
      test: [ "CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:8091/health" ]
      interval: 30s
      timeout: 10s
      retries: 3
    restart: unless-stopped
    networks:
      - ruay-network

  # Web Service (Port 3008)
  web:
    build:
      context: .
      dockerfile: deployments/docker/web.dev.Dockerfile
    ports:
      - "3008:3008"
    environment:
      - NODE_ENV=development  # เปลี่ยนเป็น development สำหรับ hot reload
      - NEXT_PUBLIC_API_URL=http://chatbot:8090
      - NEXT_PUBLIC_WEBPACK_URL=http://webhook:8091
      - NEXT_PUBLIC_FACEBOOK_APP_ID=${NEXT_PUBLIC_FACEBOOK_APP_ID}
      - FACEBOOK_APP_ID=${FACEBOOK_APP_ID}
      - FACEBOOK_APP_SECRET=${FACEBOOK_APP_SECRET}
      - NEXTAUTH_URL=${NEXTAUTH_URL}
      - NEXTAUTH_SECRET=${NEXTAUTH_SECRET}
      - CHATBOT_API_URL=http://chatbot:8090
    volumes:
      # Mount source code สำหรับ development
      - ./web:/app
      # Mount node_modules เป็น named volume เพื่อประสิทธิภาพ
      - web_node_modules:/app/node_modules
      # Mount Next.js cache
      - web_next_cache:/app/.next
    depends_on:
      - chatbot
      - webhook
    restart: unless-stopped
    networks:
      - ruay-network

volumes:
  postgres_data:
  web_node_modules:
  web_next_cache:


networks:
  ruay-network:
    driver: bridge
